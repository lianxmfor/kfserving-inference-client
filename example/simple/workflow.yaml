---
# Source: seldon-batch-workflow/templates/workflow.yaml
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: seldon-batch-process-simple
  namespace: argo
spec:
  securityContext:
    runAsNonRoot: false
    runAsUser: 0 # run with root user
  entrypoint: seldon-batch-process
  volumeClaimTemplates:
  - metadata:
      name: "seldon-pvc"
      ownerReferences:
      - apiVersion: argoproj.io/v1alpha1
        blockOwnerDeletion: true
        kind: Workflow
        name: "{{workflow.name}}"
        uid: "{{workflow.uid}}"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: "2Mi"
  volumes:
  - name: rclone-config
    secret:
      secretName: "rclone-config-secret"
  templates:
  - name: seldon-batch-process
    steps:
    - - name: create-seldon-resource
        template: create-seldon-resource-template
    - - name: wait-seldon-resource
        template: wait-seldon-resource-template
    - - name: download-object-store
        template: download-object-store-template
    - - name: process-batch-inputs
        template: process-batch-inputs-template
    - - name: upload-object-store
        template: upload-object-store-template
    - - name: delete-seldon-resource
        template: delete-seldon-resource-template

  - name: create-seldon-resource-template
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    resource:
      action: create
      manifest: |
        apiVersion: machinelearning.seldon.io/v1
        kind: SeldonDeployment
        metadata:
          name: "lightgbm"
          namespace: argo
          ownerReferences:
          - apiVersion: argoproj.io/v1alpha1
            blockOwnerDeletion: true
            kind: Workflow
            name: "{{workflow.name}}"
            uid: "{{workflow.uid}}"
        spec:
          name: "lightgbm"
          protocol: kfserving
          predictors:
            - componentSpecs:
              - spec:
                  containers:
                  - name: classifier
                    env:
                    - name: GUNICORN_THREADS
                      value: "10"
                    - name: GUNICORN_WORKERS
                      value: "1"
                    resources:
                      requests:
                        cpu: 50m
                        memory: 100Mi
                      limits:
                        cpu: 50m
                        memory: 1000Mi
              graph:
                children: []
                implementation: PALFISH_LightGBM_SERVER
                modelUri: s3://lianxm-seldon-model-1256448737/lightgbm/simple
                envSecretRefName: seldon-init-secret
                name: classifier
              name: default
              replicas: 2

  - name: wait-seldon-resource-template
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    script:
      image: bitnami/kubectl:1.17
      command: [bash]
      source: |
        sleep 5
        kubectl rollout status \
            deploy/$(kubectl get deploy -l seldon-deployment-id="lightgbm" -o jsonpath='{.items[0].metadata.name}')

  - name: download-object-store-template
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    script:
      image: rclone/rclone:1.53
      volumeMounts:
      - name: "seldon-pvc"
        mountPath: /assets
      - name: rclone-config
        mountPath: /config/rclone
        readOnly: true
      command: [sh]
      source: |
        rclone copyto cluster-minio:data/simple/input-data.csv /assets/input-data.csv

  - name: process-batch-inputs-template
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    script:
      # image: seldonio/seldon-core-s2i-python37:1.5.0
      image: 1034552569/kfserving-inference-batch-client:v3
      volumeMounts:
      - name: "seldon-pvc"
        mountPath: /assets
      command: [bash]
      source: |
        ./kfserving-inference-client \
        --host "lightgbm-default:5001" \
        -i "/assets/input-data.csv" \
        -o "/assets/output-data.csv" \
        -m "simple"

  - name: upload-object-store-template
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    script:
      image: rclone/rclone:1.53
      volumeMounts:
      - name: "seldon-pvc"
        mountPath: /assets
      - name: rclone-config
        mountPath: /config/rclone
        readOnly: true
      command: [sh]
      source: |
        rclone copyto /assets/output-data.csv cluster-minio:data/simple/output-data-{{workflow.uid}}.csv

  - name: delete-seldon-resource-template
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    script:
      image: bitnami/kubectl:1.17
      command: [bash]
      source: |
        sleep 5
        kubectl delete seldondeployments -n argo lightgbm
